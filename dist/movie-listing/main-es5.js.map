{"version":3,"sources":["webpack:///src/app/services/util.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/main/main.component.html","webpack:///src/app/services/request-cache.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/services/db.service.ts","webpack:///src/app/services/caching-Interceptor.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["UtilService","collection","col","dir","sort","a","b","aVal","bVal","isString","trim","toUpperCase","val","String","environment","production","endPoint","MainComponent","dbService","utilService","subscription","genreList","displayList","isDefault","direction","columnSelected","genreIds","rate","gridsize","loadMovies","loadGenres","add","getAllMovies","pipe","items","subscribe","movieList","console","log","results","sortBy","getGenres","id","obj","find","item","ids","filter","push","filterMovieList","temp","length","genre_ids","some","i","includes","vote_average","name","Array","parseInt","Math","floor","event","value","updateSetting","maxAge","RequestCacheService","cache","Map","req","url","urlWithParams","cached","get","undefined","response","newUrl","buildCachedUrl","entry","lastRead","Date","now","forEach","expiredEntry","oldUrl","set","split","AppComponent","title","AppModule","provide","useClass","multi","DbService","http","api","errorMessage","CachingInterceptor","next","clone","setHeaders","cachedResponse","sendRequest","handle","headers","put","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","bootstrapModule","err","error","webpackEmptyAsyncContext","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilService {\n\n  constructor() { }\n\n  sortBy(collection: any[], col: string, dir: number): any[] {\n    collection = [...collection].sort((a: any, b: any) => {\n        let aVal: any;\n        let bVal: any;\n\n        aVal = a[col];\n        bVal = b[col];\n\n        if (this.isString(aVal)) { aVal = aVal.trim().toUpperCase(); }\n        if (this.isString(bVal)) { bVal = bVal.trim().toUpperCase(); }\n\n        if (aVal === bVal) {\n            return 0;\n        }\n        else if (aVal > bVal) {\n            return dir * -1;\n        }\n        else {\n            return dir * 1;\n        }\n    });\n    return collection;\n  }\n\n  isString(val: any): boolean {\n      return (val && (typeof val === 'string' || val instanceof String));\n  }\n}\n","\nexport const environment = {\n  production: false,\n  endPoint: 'http://localhost:3000',\n};\n\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Genre } from 'src/app/model/genre';\nimport { Movie, MovieList } from 'src/app/model/movie';\nimport { DbService } from 'src/app/services/db.service';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  public subscription: Subscription = new Subscription();\n  public genreList: Genre[] = [];\n  public movieList: MovieList;\n  public displayList: Movie[] = [];\n  public isDefault = true;\n  public direction = -1;\n  public columnSelected = 'popularity';\n  public genreIds:number[] = [];\n  public rate = 2;\n  gridsize: number = 1;\n\n  constructor(\n    private dbService: DbService,\n    private utilService: UtilService,\n    ) \n    { }\n\n  ngOnInit(): void {\n    this.loadMovies();\n    this.loadGenres();\n  }\n\n  loadMovies(): void {\n    this.subscription.add(this.dbService.getAllMovies()\n      .pipe(filter(items => !! items))\n      .subscribe((items: MovieList) => {\n        this.movieList = items;\n        console.log('items', items.results)\n        if(this.isDefault) {\n          this.displayList = this.utilService.sortBy(items.results, this.columnSelected, this.direction);\n          console.log('this.displayList', this.displayList)\n          \n        }\n      }));\n  }\n\n  loadGenres(): void {\n    this.subscription.add(this.dbService.getGenres()\n      .pipe(filter(items => !! items))\n      .subscribe((items: Genre[]) => {\n        this.genreList = items;\n        console.log('genres', items)\n      }));\n  }\n\n  addRemoveToFilter(id: number): void {\n    const obj = this.genreIds.find(item => item === id);\n    if(obj) {\n      const ids = this.genreIds.filter(item => item !== id);\n      this.genreIds = [];\n      this.genreIds = ids;\n    } else {\n      this.genreIds.push(id);\n    }\nconsole.log('this.genreIds', this.genreIds)\n    this.filterMovieList();\n  }\n\n  filterMovieList(): void {\n    const temp = this.utilService.sortBy(this.movieList.results, this.columnSelected, this.direction);\n    if(this.genreIds.length > 0) {\n      this.displayList = [];\n      this.displayList = temp.filter(item => item.genre_ids.some(i => this.genreIds.includes(i)));\n      this.displayList = this.displayList.filter(item => item.vote_average >= this.rate);\n    }\n\n  }\n\n  filterRate(rate: number): void {\n    this.rate = rate;\n    if(this.displayList.length > 0) {\n      this.filterMovieList();\n      const temp = this.displayList;\n      this.displayList = [];\n      this.displayList = temp.filter(item => item.vote_average >= rate);\n    }\n  }\n\n  getGenreById(id: number): string {\n    return this.genreList.find(item => item.id === id) ? this.genreList.find(item => item.id === id).name : '';\n  }\n\n  resetFilter(): void {\n    this.displayList = this.utilService.sortBy(this.movieList.results, this.columnSelected, this.direction);\n  }\n\n  counter(i: string): number[] {\n    return new Array(parseInt(i));\n  }\n\n  floorNumber(i: number): number {\n    return Math.floor(i);\n  }\n\n  \n  updateSetting(event) {\n    this.gridsize = event.value;\n  }\n\n}\n","\n<div>\n\t<span>Grid Size (px): </span><b class=\"gridSizeValue\">{{gridsize.value}}</b>\n</div>\n<mat-slider #gridsize (change)=\"updateSetting($event)\" step=\"1\" min=\"1\" max=\"10\" [value]=\"gridsize\"></mat-slider>\n\n\n<!-- <button (click)=\"addRemoveToFilter(28)\">Add Action</button>\n<button (click)=\"addRemoveToFilter(12)\">Add Adventure</button>\n<button (click)=\"addRemoveToFilter(16)\">Add Animation</button>\n<button (click)=\"addRemoveToFilter(80)\">Add Crime</button>\n\n<button (click)=\"filterRate(3.2)\">Low avarage</button>\n<button (click)=\"filterRate(5.4)\">Mediem avarage</button>\n<button (click)=\"filterRate(7.1)\">High avarage</button> -->\n\n<!-- <div class=\"card-wrapper\">\n    <div *ngFor=\"let item of displayList\" style=\"display: inline-block;\">\n        <mat-card class=\"card-container\">\n            <img mat-card-image  src=\"../../../assets/images{{item.poster_path}}\" alt=\"item.title\" class=\"img-card\">\n            <mat-card-content>\n                <mat-card-title class=\"title-card\">{{item.title}}</mat-card-title>\n                <mat-divider></mat-divider>\n                <ul class=\"genre-container\">\n                    <li *ngFor=\"let genre of item.genre_ids\" class=\"genre-card\">{{getGenreById(genre)}},</li>\n                </ul>\n    \n            </mat-card-content>\n            <mat-card-actions>\n                <div class=\"rate-container\">\n                    <span class=\"rate-title\">Rate:</span>\n                    <span class=\"material-icons rate-stars\" *ngFor=\"let in of counter(item.vote_average) ;let i = index\">star_rate</span>\n                    <span *ngIf=\"item.vote_average % floorNumber(item.vote_average) > 0\" class=\"material-icons rate-stars\">star_half</span>\n                </div>\n              \n            </mat-card-actions>\n        </mat-card>\n    </div>\n</div> -->\n","import { HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nconst maxAge = 30000;\n@Injectable({\n    providedIn: 'root'\n  })\nexport class RequestCacheService  {\n\n  cache = new Map();\n\n  get(req: HttpRequest<any>): HttpResponse<any> | undefined {\n    const url = req.urlWithParams;\n    const cached = this.cache.get(url);\n    if (!cached) {\n      return undefined;\n    }\n    return cached.response;\n  }\n\n  put(req: HttpRequest<any>, response: HttpResponse<any>): void {\n    const url = req.url;\n    const newUrl  = this.buildCachedUrl(url);\n    const entry = { url, response, lastRead: Date.now() };\n    this.cache.forEach(expiredEntry => {\n      const oldUrl = this.buildCachedUrl(expiredEntry.url);\n      if (newUrl === oldUrl) {\n          this.cache.delete(expiredEntry.url);\n        }\n      });\n\n    this.cache.set(url, entry);\n  }\n\n  private buildCachedUrl(url: string): string {\n    const temp = url.split('&');\n    return `${temp[0]}`;\n  }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'movie-listing';\n}\n","\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MainComponent } from './components/main/main.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CachingInterceptor } from './services/caching-Interceptor';\nimport { MatSliderModule } from '@angular/material/slider';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatSliderModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: CachingInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { map, catchError, filter } from 'rxjs/operators';\nimport { MovieList } from '../model/movie';\nimport { Genre } from '../model/genre';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DbService {\n\n  public api = environment.endPoint;\n  public errorMessage = '';\n  \n  constructor(\n    private http: HttpClient) \n    {}\n\n    getAllMovies(): Observable<MovieList> {\n      return this.http.get<MovieList>(`${this.api}/movies`)\n                  .pipe(filter(items => !!items), map((items: MovieList) => items));\n    }\n\n    getGenres(): Observable<Genre[]> {\n      return this.http.get<Genre[]>(`${this.api}/genres`)\n                  .pipe(filter(items => !!items), map((items: Genre[]) => items));\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpRequest, HttpResponse, HttpInterceptor, HttpHandler } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { RequestCacheService } from './request-cache.service';\n\n@Injectable()\nexport class CachingInterceptor implements HttpInterceptor {\n  constructor(private cache: RequestCacheService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    console.log(\"inside\")\n    req = req.clone({\n        setHeaders: {\n          'Access-Control-Allow-Credentials' : 'true',\n          'Access-Control-Allow-Origin':'*',\n          'Access-Control-Allow-Methods':'GET',\n          'Access-Control-Allow-Headers':'application/json'\n        } \n      });\nconsole.log(\"req\", req)\n    const cachedResponse = this.cache.get(req);\n    return cachedResponse ? of(cachedResponse) : this.sendRequest(req, next, this.cache);\n  }\n  \n  sendRequest(\n    req: HttpRequest<any>,\n    next: HttpHandler,\n    cache: RequestCacheService): Observable<HttpEvent<any>> {\n\n    return next.handle(req).pipe(\n      tap(event => {\n        if (event instanceof HttpResponse) {\n          event = event.clone({\n            headers: event.headers.set('Access-Control-Allow-Origin', '*')\n          });\n          cache.put(req, event);\n        }\n      })\n    );\n  }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MainComponent } from './components/main/main.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'main',\n    pathMatch: 'full'\n  },\n  {\n    path: 'main',\n    component: MainComponent\n  },\n  {\n    path: '**',\n    redirectTo: 'main',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}